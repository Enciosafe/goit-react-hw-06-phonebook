{"ast":null,"code":"var _jsxFileName = \"/Users/finnegan/projects/projects/goit/react/goit-react-hw-06-phonebook/src/App.js\";\nimport React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [],\n      filter: ''\n    };\n\n    this.addNewContact = data => {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, data]\n      }));\n    };\n\n    this.delContact = e => {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts.filter(contact => contact.id !== e.target.id)]\n      }));\n    };\n\n    this.changeFilter = e => {\n      const {\n        value\n      } = e.currentTarget;\n      this.setState({\n        filter: value\n      });\n    };\n\n    this.getVisibleContacts = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      const lowerFilter = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(lowerFilter));\n    };\n  }\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    console.log(parsedContacts);\n\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n      console.log(this.state.contacts);\n    }\n  }\n\n  render() {\n    const filteredContacts = this.getVisibleContacts();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        contacts: this.state.contacts,\n        onSubmit: this.addNewContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        handlerFilter: this.changeFilter,\n        filter: this.state.filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: filteredContacts,\n        handlerDel: this.delContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;\nApp.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string,\n    sex: PropTypes.bool.isRequired\n  }))\n}; //коментарии ради коммита....","map":{"version":3,"sources":["/Users/finnegan/projects/projects/goit/react/goit-react-hw-06-phonebook/src/App.js"],"names":["React","ContactForm","ContactList","Filter","PropTypes","App","Component","state","contacts","filter","addNewContact","data","setState","prevState","delContact","e","contact","id","target","changeFilter","value","currentTarget","getVisibleContacts","lowerFilter","toLowerCase","name","includes","componentDidMount","parsedContacts","JSON","parse","localStorage","getItem","console","log","componentDidUpdate","prevProps","setItem","stringify","render","filteredContacts","propTypes","string","arrayOf","shape","isRequired","number","sex","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport PropTypes from \"prop-types\";\n\n\n\nclass App extends React.Component {\n\n    state = {\n        contacts: [],\n        filter: ''\n    }\n    addNewContact = (data) => {\n        this.setState(prevState => ({\n           contacts: [...prevState.contacts, data]\n        }))\n    }\n\n    delContact = e => {\n        this.setState(prevState => ({\n            contacts: [...prevState.contacts.filter(contact => contact.id !== e.target.id)]\n        }))\n    }\n\n    changeFilter = e => {\n        const {value} = e.currentTarget\n        this.setState({filter: value})\n    }\n\n    getVisibleContacts = () => {\n        const {filter, contacts} = this.state\n        const lowerFilter = filter.toLowerCase()\n\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(lowerFilter))\n    }\n\n    componentDidMount() {\n        const parsedContacts = JSON.parse(localStorage.getItem('contacts'))\n        console.log(parsedContacts)\n        if (parsedContacts) {\n            this.setState({contacts: parsedContacts})\n        }\n        }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.contacts !== this.state.contacts) {\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n            console.log(this.state.contacts)\n        }\n    }\n\n\n    render() {\n        const filteredContacts = this.getVisibleContacts()\n\n    return <>\n        <h1>Phonebook</h1>\n         <ContactForm\n             contacts={this.state.contacts}\n             onSubmit={this.addNewContact}/>\n\n        <h2>Contacts</h2>\n        <Filter handlerFilter={this.changeFilter}\n                filter={this.state.filter}/>\n        <ContactList contacts={filteredContacts}\n                     handlerDel={this.delContact}\n        />\n    </>\n  }\n}\nexport default App;\n\n\nApp.propTypes = {\n    filter: PropTypes.string,\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string,\n            sex: PropTypes.bool.isRequired\n        })\n    )\n};\n\n\n//коментарии ради коммита...."]},"metadata":{},"sourceType":"module"}